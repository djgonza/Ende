#BlueJ class context
comment0.params=
comment0.target=Juego()
comment1.params=
comment1.target=void\ crearHabitaciones()
comment1.text=\r\n\ Crea\ todas\ las\ habitaciones\ y\ establece\ las\ salidas\r\n
comment10.params=orden
comment10.target=boolean\ salir(Orden)
comment10.text=\ \r\n\ Se\ ha\ tecleado\ "Salir".\ Verificar\ el\ resto\ de\ la\ orden\r\n\ para\ ver\ si\ realmente\ se\ quiere\ salir\ del\ juego\r\n\ @return\ true,\ si\ la\ orden\ sale\ del\ juego,\ false\ en\ otro\ caso.\r\n
comment2.params=
comment2.target=void\ jugar()
comment2.text=\r\n\ m\u00E9todo\ para\ empezar\ a\ jugar.\ Incluye\ un\ bucle\r\n\ que\ se\ ejecuta\ hasta\ el\ final\ del\ juego\r\n
comment3.params=
comment3.target=void\ escribirBienvenida()
comment3.text=\r\n\ Escribir\ mensaje\ de\ bienvenida\ al\ jugador.\r\n
comment4.params=orden
comment4.target=boolean\ procesarOrden(Orden)
comment4.text=\r\n\ Dada\ una\ orden\ se\ procesa\ (ejecuta).\r\n\ @param\ orden\ \ La\ orden\ a\ ejecutar.\r\n\ @return\ true\ Si\ la\ orden\ finaliza\ el\ juego,\ false\ en\ otro\ caso.\r\n
comment5.params=
comment5.target=void\ escribirAyuda()
comment5.text=\r\n\ Escribe\ informacion\ de\ ayuda.\r\n\ ponemos\ un\ mensaje\ estupido\ o\ criptico\ y\ la\ lista\ \r\n\ de\ ordenes\ \r\n
comment6.params=
comment6.target=void\ ver()
comment6.text=\r\n\ \ \r\n
comment7.params=
comment7.target=void\ comer()
comment7.text=\r\n\ \ \r\n
comment8.params=
comment8.target=void\ volver()
comment8.text=\r\n\ \ \r\n
comment9.params=orden
comment9.target=void\ irAHabitacion(Orden)
comment9.text=\ \r\n\ Intentar\ ir\ en\ una\ direcci\u00F3n.\ Si\ hay\ una\ salida\ entrar\ en\ la\ nueva\r\n\ habitaci\u00F3n,\ sino\ escribir\ un\ mensaje\ de\ error.\r\n
numComments=11
